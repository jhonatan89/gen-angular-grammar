grammar uniandes.academia.Generator with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate generator "http://www.academia.uniandes/Generator"

Root:
	(elements+=AbstractElement)*;
	

AbstractElement:
	PackageDeclaration | Application | Import | Services | Modules | Components | Models
;

PackageDeclaration:
    'package' name=QualifiedName LEFTCURLY
        (elements+=AbstractElement)*
    RIGTHCURLY;
 

Application:
	name=Name LEFTCURLY
	(elements+=AbstractElement)*
	RIGTHCURLY
;


Import:
    'import' importedNamespace=QualifiedNameWithWildcard
;

QualifiedName:
    ID ('.' ID)*;
    
QualifiedNameWithWildcard:
   QualifiedName '.*'?
 ;
 
 

Modules:
	'Modules' LEFTCURLY 
	(modules+=Module)*
	RIGTHCURLY
;


Services:
	'ServicesGroup' name=Name LEFTCURLY 
	'baseUrl' COLON baseUrl=EString
	(services+=Service)*
	RIGTHCURLY
;

Components:
	'Components' LEFTCURLY 
	(components+=Component)*
	RIGTHCURLY
;

Models:
	'Models' LEFTCURLY 
	(models+=Model)*
	RIGTHCURLY
;




Configuration:
	'setup' LEFTCURLY
	'version'COLON version=EString COLON
	('onlyComponents'COLON onlyComponents=BOOLEAN COLON)?
	('language'COLON language=EnumLanguage COLON)?
	RIGTHCURLY
;


Module:
	VisualModule | ContainerModule
;

Model:
	'Model' name=Name LEFTCURLY
	'attributes' COLON LEFTBRACKET (attributes+=Attribute COMA?)* RIGHTBRACKET SEMICOLON
	'idAtribute' COLON idAtribute=EString SEMICOLON
	'showAttributeList' COLON nameAttribute= EString SEMICOLON
	RIGTHCURLY
;

Attribute:
	LEFTCURLY 'attributeName' COLON name=Name COMA
	'type' COLON type=EnumType COMA?
	('component' COLON component=[ComponentBasic] COMA)? 
	('isRequired' COLON isRequired=BOOLEAN)?
	('mockType' COLON mockType=EString)?
	RIGTHCURLY
;



VisualModule:
	'VisualModule' name=Name LEFTCURLY
	('parent' COLON parent=[Module] SEMICOLON)?
	'imports' COLON LEFTBRACKET (imports+=[Module] COMA?)* RIGHTBRACKET SEMICOLON
	'exports' COLON LEFTBRACKET (exports+=[Module] COMA?)* RIGHTBRACKET SEMICOLON
	'route' COLON LEFTBRACKET (routes+=EString COMA?)* RIGHTBRACKET SEMICOLON
	'show' COLON LEFTBRACKET (show+=EString COMA?)* RIGHTBRACKET SEMICOLON
	'defaultRoute' COLON (defaultRoute=EString) SEMICOLON
	('showLayout' COLON type=EnumLayout SEMICOLON)?
	'components' COLON LEFTBRACKET (components+=[Component] COMA?)* RIGHTBRACKET SEMICOLON
 	RIGTHCURLY
;

ContainerModule:
	'ContainerModule' name=Name LEFTCURLY
	'parent' COLON parent=[Module] SEMICOLON
	'imports' COLON LEFTBRACKET (imports+=[Module] COMA?)* RIGHTBRACKET SEMICOLON
	'exports' COLON LEFTBRACKET (exports+=[Component] COMA?)* RIGHTBRACKET SEMICOLON
	'components' COLON LEFTBRACKET (components+=[Component] COMA?)* RIGHTBRACKET SEMICOLON 
	RIGTHCURLY
;

Component:
	ComponentBasic | ComponentContainer
;

ComponentContainer:
	'ComponentContainer' name=Name LEFTCURLY RIGTHCURLY
;


ComponentBasic:
	Crud | SearchComboBox
;



Crud:
	'Crud' name=Name LEFTCURLY 
	'model' COLON modelData = [Model] SEMICOLON
	('showAsGallery' COLON showAsGallery = BOOLEAN SEMICOLON)?
	('enableMock' COLON enableMock = BOOLEAN SEMICOLON)?
	('createService' COLON  create = [Service|QualifiedName] SEMICOLON)
	('updateService' COLON  update = [Service|QualifiedName] SEMICOLON)
	('listService' COLON  list = [Service|QualifiedName] SEMICOLON)
	('listNumService' COLON  listNum = [Service|QualifiedName] SEMICOLON)
	('deleteService' COLON  deleteItem = [Service|QualifiedName] SEMICOLON)
	('getService' COLON  get = [Service|QualifiedName] SEMICOLON)
		
	RIGTHCURLY
	
;


SearchComboBox:
	'SearchComboBox' name=Name LEFTCURLY
	'model'COLON modelData = [Model] SEMICOLON
	'service' COLON  service= [Service|QualifiedName] SEMICOLON
	RIGTHCURLY
;




Service:
	'Service' name=Name LEFTCURLY 
	'url' COLON url=EString COMA
	'type' COLON type=EnumMethodType COMA?
	('collectionName' COLON collectionName=EString COMA?)?
	RIGTHCURLY
;



//-----------Utils-------------------------------------
Name : ID;

EString returns ecore::EString:
	STRING | ID;
	
enum EnumType:
	STRING = 'String' | NUMBER = 'Number' | BOOLEAN = 'Boolean' | ANY = 'Any' | DATE = 'Date' | SearchComboBox = 'SearchComboBox'
;	

enum EnumMethodType:
	POST = 'POST' | GET = 'GET' | UPDATE = 'UPDATE' | DELETE = 'DELETE' | PATCH = 'PATCH' | PUT = 'PUT'
;

enum EnumLayout:
	LIST = 'List' | GALLERY = 'GALLERY' 
;


enum EnumLanguage:
	ES = 'Spanish' | EN = 'English'
;
	
	

		
terminal WS :
(' '|'\t'|'\r'|'\n')+;

terminal LEFTCURLY :
	'{';
	
terminal RIGTHCURLY:
	'}'
;

terminal COMA :
	','
;	

terminal COLON :
	':'
;

terminal SEMICOLON :
	';'
;

terminal LEFTBRACKET :
	'['
;

terminal RIGHTBRACKET :
	']'
;


terminal BOOLEAN returns ecore::EBoolean:
	'true' | 'false';
	

	


